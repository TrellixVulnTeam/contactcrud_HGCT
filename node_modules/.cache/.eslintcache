[{"/Users/adrian/Documents/GitHub/contact/crudcontact/src/index.tsx":"1","/Users/adrian/Documents/GitHub/contact/crudcontact/src/reportWebVitals.js":"2","/Users/adrian/Documents/GitHub/contact/crudcontact/src/App.tsx":"3","/Users/adrian/Documents/GitHub/contact/crudcontact/src/router/Router.tsx":"4","/Users/adrian/Documents/GitHub/contact/crudcontact/src/router/config.tsx":"5","/Users/adrian/Documents/GitHub/contact/crudcontact/src/store/index.ts":"6","/Users/adrian/Documents/GitHub/contact/crudcontact/src/router/RouteWithSubRoutes.tsx":"7","/Users/adrian/Documents/GitHub/contact/crudcontact/src/pages/fallback/Fallback.tsx":"8","/Users/adrian/Documents/GitHub/contact/crudcontact/src/pages/home/Home.tsx":"9","/Users/adrian/Documents/GitHub/contact/crudcontact/src/api/GetContact.ts":"10","/Users/adrian/Documents/GitHub/contact/crudcontact/src/helpers/defaultAvatar.ts":"11","/Users/adrian/Documents/GitHub/contact/crudcontact/src/pages/editContact/EditContact.tsx":"12","/Users/adrian/Documents/GitHub/contact/crudcontact/src/api/GetEditContact.ts":"13","/Users/adrian/Documents/GitHub/contact/crudcontact/src/components/menuBar/MenuBar.tsx":"14","/Users/adrian/Documents/GitHub/contact/crudcontact/src/api/PostEditContact.ts":"15","/Users/adrian/Documents/GitHub/contact/crudcontact/src/pages/addContact/AddContact.tsx":"16","/Users/adrian/Documents/GitHub/contact/crudcontact/src/api/PostAddContact.ts":"17","/Users/adrian/Documents/GitHub/contact/crudcontact/src/api/DeleteContact.ts":"18","/Users/adrian/Documents/GitHub/contact/crudcontact/src/components/submitButton/SubmitButton.tsx":"19","/Users/adrian/Documents/GitHub/contact/crudcontact/src/api/PostEditPhoto.ts":"20","/Users/adrian/Documents/GitHub/contact/crudcontact/src/components/searchBar/SearchBar.tsx":"21"},{"size":501,"mtime":1619784196000,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1619778604000,"results":"24","hashOfConfig":"23"},{"size":697,"mtime":1619784245000,"results":"25","hashOfConfig":"23"},{"size":454,"mtime":1619782270000,"results":"26","hashOfConfig":"23"},{"size":1000,"mtime":1619796362000,"results":"27","hashOfConfig":"23"},{"size":983,"mtime":1619782232000,"results":"28","hashOfConfig":"23"},{"size":717,"mtime":1619782362000,"results":"29","hashOfConfig":"23"},{"size":100,"mtime":1619783602000,"results":"30","hashOfConfig":"23"},{"size":7453,"mtime":1619848264000,"results":"31","hashOfConfig":"23"},{"size":336,"mtime":1619819559000,"results":"32","hashOfConfig":"23"},{"size":288,"mtime":1619787949000,"results":"33","hashOfConfig":"23"},{"size":4692,"mtime":1619821939000,"results":"34","hashOfConfig":"23"},{"size":288,"mtime":1619818693000,"results":"35","hashOfConfig":"23"},{"size":1619,"mtime":1619848690000,"results":"36","hashOfConfig":"23"},{"size":666,"mtime":1619837746000,"results":"37","hashOfConfig":"23"},{"size":4394,"mtime":1619847580000,"results":"38","hashOfConfig":"23"},{"size":910,"mtime":1619837755000,"results":"39","hashOfConfig":"23"},{"size":467,"mtime":1619818629000,"results":"40","hashOfConfig":"23"},{"size":422,"mtime":1619817830000,"results":"41","hashOfConfig":"23"},{"size":492,"mtime":1619821294000,"results":"42","hashOfConfig":"23"},{"size":736,"mtime":1619848108000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"7hrbt8",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adrian/Documents/GitHub/contact/crudcontact/src/index.tsx",[],["94","95"],"/Users/adrian/Documents/GitHub/contact/crudcontact/src/reportWebVitals.js",[],["96","97"],"/Users/adrian/Documents/GitHub/contact/crudcontact/src/App.tsx",[],"/Users/adrian/Documents/GitHub/contact/crudcontact/src/router/Router.tsx",[],"/Users/adrian/Documents/GitHub/contact/crudcontact/src/router/config.tsx",[],"/Users/adrian/Documents/GitHub/contact/crudcontact/src/store/index.ts",["98"],"import { combineReducers, createStore } from 'redux';\n\n//import { searchResultReducer } from './search/reducer';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nexport interface StoreStateType {\n\n  //   search: ResultState;\n}\n\nconst rootReducer = combineReducers({\n\n  //search: searchResultReducer\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\n// if (process.env.NODE_ENV === 'development') {\n//   const { logger } = require(`redux-logger`);\n//   middlewares.push(logger);\n// }\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default function() {\n  //   const enhancer = compose(applyMiddleware(...middlewares));\n  const store = createStore(persistedReducer);\n  console.log(store.getState());\n  // @ts-ignore\n  const persistor = persistStore(store);\n  return { store, persistor };\n}\n","/Users/adrian/Documents/GitHub/contact/crudcontact/src/router/RouteWithSubRoutes.tsx",[],"/Users/adrian/Documents/GitHub/contact/crudcontact/src/pages/fallback/Fallback.tsx",[],"/Users/adrian/Documents/GitHub/contact/crudcontact/src/pages/home/Home.tsx",["99","100","101","102","103","104","105"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport './Home.scss'\nimport Menubar from '../../components/menuBar/MenuBar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetContact } from '../../api/GetContact';\nimport { ContactDetailModelType, ContactModelType } from '../../models/ContactModel';\nimport { withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { defaultAvatar } from '../../helpers/defaultAvatar';\nimport { useHistory } from 'react-router';\nimport { DeleteContact } from '../../api/DeleteContact';\nimport SearchBar from '../../components/searchBar/SearchBar';\n\nconst Home = () => {\n    const [ contactList, setContactList ] = useState([] as ContactDetailModelType[]);\n    const [ isToggleMenu, setIsToggleMenu ] = useState(false);\n    const [ search, setSearch ] = useState('');\n    const [ isFilled, setIsFilled ] = useState(false);\n    const history = useHistory();\n\n\n    useEffect(()=>{\n        getContact()\n    },[])\n\n    const getContact = () => {\n        GetContact().then((result) => {\n            setContactList(result)\n            console.log(result, 'apani')\n        })\n    }\n\n    const toggleMenu = () => {\n        setIsToggleMenu(!isToggleMenu);\n    }\n\n    const goToEdit = (id: string) => {\n        history.replace(`/edit/${id}`)\n    }\n\n    const deleteHandler = (id:string) => {\n        DeleteContact(id).then((res)=>{\n            if(res) {\n                alert('sukses')\n                window.location.reload();\n            }\n            console.log(res,'apani4')\n        })\n    }\n\n    const handleChange = (e: any) => {\n        e.preventDefault();\n        const { value } = e.target;\n        setIsFilled(true)\n        setSearch(value)\n        console.log(value, 'apanisearch')\n    }\n\n    //Table Styling\n    const StyledTableCell = withStyles((theme: Theme) =>\n        createStyles({\n            head: {\n                backgroundColor: theme.palette.common.black,\n                color: theme.palette.common.white,\n            },\n            body: {\n                fontSize: 14,\n            },\n        }),\n    )(TableCell);\n\n    const StyledTableRow = withStyles((theme: Theme) =>\n        createStyles({\n            root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.action.hover,\n            },\n            },\n        }),\n    )(TableRow);\n\n    const useStyles = makeStyles({\n        table: {\n          minWidth: 700,\n        },\n      });\n    \n      const classes = useStyles();\n    return (\n        <div className=\"contact-home\">\n            <Menubar\n                isToggleMenu={isToggleMenu}\n                toggleMenu={toggleMenu}\n            />\n            <div className=\"contact-main\">\n                <div className=\"header\">\n                    <span className=\"title\">Home</span>\n                    <div className=\"line\"/>\n                </div>\n                <div className=\"search-bar\">\n                    <SearchBar value={search} onChange={handleChange} placeHolder=\"Find Contact\" />\n                </div>\n                <div className=\"contact-table\">\n                    <TableContainer component={Paper}>\n                        <Table className={classes.table} aria-label=\"customized table\">\n                            <TableHead>\n                                <TableRow>\n                                    <StyledTableCell align=\"left\">Profile Picture</StyledTableCell>\n                                    <StyledTableCell align=\"left\">First Name</StyledTableCell>\n                                    <StyledTableCell align=\"left\">Last Name</StyledTableCell>\n                                    <StyledTableCell align=\"left\">Age</StyledTableCell>\n                                    <StyledTableCell align=\"center\" colSpan={2}>Action</StyledTableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {!search ? contactList.map((res, i) => (\n                                <StyledTableRow key={res.id}>\n                                    <StyledTableCell align=\"left\">\n                                        <img src={defaultAvatar(res.photo)} alt=\"photo\" style={{width: '50px', height: '50px'}} />\n                                    </StyledTableCell>\n                                    <StyledTableCell align=\"left\">{res.firstName}</StyledTableCell>\n                                    <StyledTableCell align=\"left\">{res.lastName}</StyledTableCell>\n                                    <StyledTableCell align=\"left\">{res.age}</StyledTableCell>\n                                    <StyledTableCell align=\"center\">\n                                        <button className=\"button-edit\" onClick={() => goToEdit(res.id)}>Edit</button>\n                                    </StyledTableCell>\n                                    <StyledTableCell align=\"center\">\n                                        <button className=\"button-delete\" onClick={() => deleteHandler(res.id)}>Remove</button>\n                                    </StyledTableCell>\n                                </StyledTableRow>\n                            )) : contactList\n                            // eslint-disable-next-line\n                            .filter(res => {\n                                if (!search) return true\n                                if (res.firstName.toLowerCase().includes(search) || res.lastName.toLowerCase().includes(search)) {\n                                    return true\n                            }\n                            })\n                            .map(res =>  (\n                                <StyledTableRow key={res.id}>\n                                    <StyledTableCell align=\"left\">\n                                        <img src={defaultAvatar(res.photo)} alt=\"photo\" style={{width: '50px', height: '50px'}} />\n                                    </StyledTableCell>\n                                    <StyledTableCell align=\"left\">{res.firstName}</StyledTableCell>\n                                    <StyledTableCell align=\"left\">{res.lastName}</StyledTableCell>\n                                    <StyledTableCell align=\"left\">{res.age}</StyledTableCell>\n                                    <StyledTableCell align=\"center\">\n                                        <button className=\"button-edit\" onClick={() => goToEdit(res.id)}>Edit</button>\n                                    </StyledTableCell>\n                                    <StyledTableCell align=\"center\">\n                                        <button className=\"button-delete\" onClick={() => deleteHandler(res.id)}>Remove</button>\n                                    </StyledTableCell>\n                                </StyledTableRow>\n                                ))\n                            }\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","/Users/adrian/Documents/GitHub/contact/crudcontact/src/api/GetContact.ts",[],"/Users/adrian/Documents/GitHub/contact/crudcontact/src/helpers/defaultAvatar.ts",[],"/Users/adrian/Documents/GitHub/contact/crudcontact/src/pages/editContact/EditContact.tsx",["106","107","108","109","110"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport './EditContact.scss'\nimport Menubar from '../../components/menuBar/MenuBar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetContact } from '../../api/GetContact';\nimport { ContactDetailModelType, PostPhotoModelType } from '../../models/ContactModel';\nimport { defaultAvatar } from '../../helpers/defaultAvatar';\nimport { useHistory, useParams } from 'react-router';\nimport { GetEditContact } from '../../api/GetEditContact';\nimport { PostEditContact } from '../../api/PostEditContact';\nimport SubmitButton from '../../components/submitButton/SubmitButton';\n\nconst EditContact = () => {\n    const { id }: any = useParams();\n    const [ isToggleMenu, setIsToggleMenu ] = useState(false);\n    const [ editInput, setEditInput] = useState(\n        {} as ContactDetailModelType\n        );\n    const [photo, setPhoto] = useState({} as PostPhotoModelType);\n    const history = useHistory();\n\n\n    useEffect(()=>{\n        getEditContact()\n    },[id])\n\n    const getEditContact = () => {\n        GetEditContact(id).then((result) => {\n            setEditInput(result)\n            setPhoto({\n                preview: result.photo,\n                raw: result.photo,\n              });\n            console.log(result, 'apani')\n        })\n    }\n\n    const toggleMenu = () => {\n        setIsToggleMenu(!isToggleMenu);\n    }\n\n    const handleChange = (e:any) => {\n        e.preventDefault();\n        const { value,  name} = e.target;\n        setEditInput((multipleInput) => ({\n            ...multipleInput,\n            [name]: value,\n        }));\n        console.log(value, 'apani2')\n    } \n\n    const changePhoto = (e: any) => {\n        const file = e.target.files[0];\n        if (e.target.files.length) {\n          setPhoto({\n            preview: file && URL.createObjectURL(file),\n            raw: file,\n          });\n        }\n        console.log(photo, 'apanifoto')\n      };\n\n      const handleSubmit = (e:any) => {\n          e.preventDefault();\n          PostEditContact(editInput, photo, editInput.id).then((result) => {\n              if(result) {\n                  alert('sukses')\n                  history.push('/')\n              }\n              console.log(result, photo, 'apani3')\n          })\n      }\n\n    return (\n        <div className=\"contact-home\">\n            <Menubar\n                isToggleMenu={isToggleMenu}\n                toggleMenu={toggleMenu}\n            />\n            <div className=\"contact-main\">\n                <div className=\"header\">\n                    <span className=\"title\">Edit Contact Page</span>\n                    <div className=\"line\"/>\n                </div>\n                <div className=\"contact-edit\">\n                    <div className='photo-container'>\n                        <img src={defaultAvatar(photo.preview)} alt='avatar' />\n                        <label htmlFor='file-input' className='change-profile-photo'>\n                        <span>Ganti foto profil</span>\n                        <input\n                            id='file-input'\n                            name='file'\n                            type='file'\n                            onChange={changePhoto}\n                        />\n                        </label>\n                    </div>\n                    <div className=\"input-field\">\n                        <span className=\"label\">First Name</span>\n                        <input \n                            type=\"text\"\n                            name=\"firstName\"\n                            onChange={handleChange}\n                            value={editInput.firstName}\n                        />\n                    </div>\n                    <div className=\"input-field\">\n                        <span className=\"label\">Last Name</span>\n                        <input \n                            type=\"text\"\n                            name=\"lastName\"\n                            onChange={handleChange}\n                            value={editInput.lastName}\n                        />\n                    </div>\n                    <div className=\"input-field\">\n                        <span className=\"label\">Age</span>\n                        <input \n                            type=\"number\"\n                            name=\"age\"\n                            onChange={handleChange}\n                            value={editInput.age}\n                            className=\"number\"\n                        />\n                    </div>\n                </div>\n                <SubmitButton handleSubmit={handleSubmit} value=\"Submit\" /> \n            </div>\n        </div>\n    )\n}\n\nexport default EditContact;","/Users/adrian/Documents/GitHub/contact/crudcontact/src/api/GetEditContact.ts",[],"/Users/adrian/Documents/GitHub/contact/crudcontact/src/components/menuBar/MenuBar.tsx",["111","112","113","114"],"import React from 'react';\nimport './MenuBar.scss'\nimport { useHistory } from 'react-router';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfo, faPlus, faUser } from '@fortawesome/free-solid-svg-icons';\nimport SearchBar from '../searchBar/SearchBar';\n\n\ninterface MenuBarProps {\n    isToggleMenu?: boolean;\n    toggleMenu?: () => void;\n}\nconst Menubar = (Props: MenuBarProps) => {\n    const { isToggleMenu, toggleMenu } = Props;\n    const history = useHistory();\n\n    return (\n        <div className=\"menu-bar\" >\n            <div className=\"menu-header\">\n                <div className=\"logo\">\n                    <img src=\"https://icon-library.com/images/contact-book-icon/contact-book-icon-9.jpg\"/>\n                </div>\n                {/* <div className=\"toggle\" onClick={toggleMenu}>\n                    X\n                </div> */}\n            </div>\n            <div className=\"menu-item\" onClick={() => (history.push('/'))}>\n                <FontAwesomeIcon icon={faUser}/>\n                <span className=\"text\">Home</span>\n                <div className=\"line\" />\n            </div>\n            <div className=\"menu-item\" onClick={() => (history.push('/add'))}>\n                <FontAwesomeIcon icon={faPlus}/>\n                <span className=\"text\">Add Contact</span>\n                <div className=\"line\" />\n            </div>\n            <div className=\"menu-item\">\n                <FontAwesomeIcon icon={faInfo}/>\n                <span className=\"text\">About</span>\n                <div className=\"line\" />\n            </div>\n        </div>\n    )\n}\n\nexport default Menubar","/Users/adrian/Documents/GitHub/contact/crudcontact/src/api/PostEditContact.ts",[],"/Users/adrian/Documents/GitHub/contact/crudcontact/src/pages/addContact/AddContact.tsx",["115","116","117","118","119","120"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport './AddContact.scss'\nimport Menubar from '../../components/menuBar/MenuBar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetContact } from '../../api/GetContact';\nimport { ContactDetailModelType, PostPhotoModelType } from '../../models/ContactModel';\nimport { defaultAvatar } from '../../helpers/defaultAvatar';\nimport { useHistory, useParams } from 'react-router';\nimport { GetEditContact } from '../../api/GetEditContact';\nimport { PostEditContact } from '../../api/PostEditContact';\nimport { PostAddContact } from '../../api/PostAddContact';\nimport SubmitButton from '../../components/submitButton/SubmitButton';\n\nconst AddContact = () => {\n    const { id }: any = useParams();\n    const [ isToggleMenu, setIsToggleMenu ] = useState(false);\n    const [ editInput, setEditInput] = useState(\n        {} as ContactDetailModelType\n        );\n    const [photo, setPhoto] = useState({} as PostPhotoModelType);\n    const history = useHistory();\n\n\n    useEffect(()=>{\n\n    },[id])\n\n\n\n    const toggleMenu = () => {\n        setIsToggleMenu(!isToggleMenu);\n    }\n\n    const handleChange = (e:any) => {\n        e.preventDefault();\n        const { value,  name} = e.target;\n        setEditInput((multipleInput) => ({\n            ...multipleInput,\n            [name]: value,\n        }));\n        console.log(value, 'apani2')\n    } \n\n    const changePhoto = (e: any) => {\n        const file = e.target.files[0];\n        if (e.target.files.length) {\n          setPhoto({\n            preview: URL.createObjectURL(file),\n            raw: file,\n          });\n        }\n      };\n\n      const handleSubmit = (e:any) => {\n          e.preventDefault();\n          PostAddContact(editInput, photo, editInput.id).then((result) => {\n              if(result) {\n                  alert('sukses')\n                  history.push('/')\n              }\n              console.log(result, editInput.id, 'apani3')\n          })\n      }\n\n    return (\n        <div className=\"contact-home\">\n            <Menubar\n                isToggleMenu={isToggleMenu}\n                toggleMenu={toggleMenu}\n            />\n            <div className=\"contact-main\">\n                <div className=\"header\">\n                    <span className=\"title\">Add Contact Page</span>\n                    <div className=\"line\"/>\n                </div>\n                <div className=\"contact-edit\">\n                    <div className='photo-container'>\n                        <img src={defaultAvatar(photo.preview)} alt='avatar' />\n                        <label htmlFor='file-input' className='change-profile-photo'>\n                        <span>Ganti foto profil</span>\n                        <input\n                            id='file-input'\n                            name='file'\n                            type='file'\n                            onChange={changePhoto}\n                        />\n                        </label>\n                    </div>\n                    <div className=\"input-field\">\n                        <span className=\"label\">First Name</span>\n                        <input \n                            type=\"text\"\n                            name=\"firstName\"\n                            onChange={handleChange}\n                            value={editInput.firstName}\n                        />\n                    </div>\n                    <div className=\"input-field\">\n                        <span className=\"label\">Last Name</span>\n                        <input \n                            type=\"text\"\n                            name=\"lastName\"\n                            onChange={handleChange}\n                            value={editInput.lastName}\n                        />\n                    </div>\n                    <div className=\"input-field\">\n                        <span className=\"label\">Age</span>\n                        <input \n                            type=\"number\"\n                            name=\"age\"\n                            onChange={handleChange}\n                            value={editInput.age}\n                            className=\"number\"\n                        />\n                    </div>\n                </div>\n                <SubmitButton handleSubmit={handleSubmit} value=\"Submit\" />\n            </div>\n        </div>\n    )\n}\n\nexport default AddContact;","/Users/adrian/Documents/GitHub/contact/crudcontact/src/api/PostAddContact.ts",[],"/Users/adrian/Documents/GitHub/contact/crudcontact/src/api/DeleteContact.ts",["121","122"],"import axios from 'axios';\nimport { ContactDetailModelType, PostPhotoModelType } from '../models/ContactModel';\n\nexport const DeleteContact = async (\nid: string,\n) => {\n\n  const result: any = await axios\n    .delete(`${process.env.REACT_APP_API}/contact/${id}`,\n    {\n        data: {\n            id: id\n        }\n    }\n  )\n    .then(({ data }) => {\n      console.log('hasil', data);\n      return data;\n    })\n    .catch((error) =>{\n      \n    });\n  return result;\n};\n","/Users/adrian/Documents/GitHub/contact/crudcontact/src/components/submitButton/SubmitButton.tsx",[],"/Users/adrian/Documents/GitHub/contact/crudcontact/src/api/PostEditPhoto.ts",["123"],"/Users/adrian/Documents/GitHub/contact/crudcontact/src/components/searchBar/SearchBar.tsx",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":32,"column":1,"nodeType":"130","endLine":39,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":13},{"ruleId":"131","severity":1,"message":"135","line":5,"column":10,"nodeType":"133","messageId":"134","endLine":5,"endColumn":21},{"ruleId":"131","severity":1,"message":"136","line":5,"column":23,"nodeType":"133","messageId":"134","endLine":5,"endColumn":34},{"ruleId":"131","severity":1,"message":"137","line":7,"column":34,"nodeType":"133","messageId":"134","endLine":7,"endColumn":50},{"ruleId":"131","severity":1,"message":"138","line":25,"column":13,"nodeType":"133","messageId":"134","endLine":25,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":126,"column":41,"nodeType":"141","endLine":126,"endColumn":131},{"ruleId":"139","severity":1,"message":"140","line":149,"column":41,"nodeType":"141","endLine":149,"endColumn":131},{"ruleId":"131","severity":1,"message":"132","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":13},{"ruleId":"131","severity":1,"message":"135","line":5,"column":10,"nodeType":"133","messageId":"134","endLine":5,"endColumn":21},{"ruleId":"131","severity":1,"message":"136","line":5,"column":23,"nodeType":"133","messageId":"134","endLine":5,"endColumn":34},{"ruleId":"131","severity":1,"message":"142","line":6,"column":10,"nodeType":"133","messageId":"134","endLine":6,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":26,"column":7,"nodeType":"145","endLine":26,"endColumn":11,"suggestions":"146"},{"ruleId":"131","severity":1,"message":"147","line":6,"column":8,"nodeType":"133","messageId":"134","endLine":6,"endColumn":17},{"ruleId":"131","severity":1,"message":"148","line":14,"column":13,"nodeType":"133","messageId":"134","endLine":14,"endColumn":25},{"ruleId":"131","severity":1,"message":"149","line":14,"column":27,"nodeType":"133","messageId":"134","endLine":14,"endColumn":37},{"ruleId":"150","severity":1,"message":"151","line":21,"column":21,"nodeType":"141","endLine":21,"endColumn":107},{"ruleId":"131","severity":1,"message":"132","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":13},{"ruleId":"131","severity":1,"message":"135","line":5,"column":10,"nodeType":"133","messageId":"134","endLine":5,"endColumn":21},{"ruleId":"131","severity":1,"message":"136","line":5,"column":23,"nodeType":"133","messageId":"134","endLine":5,"endColumn":34},{"ruleId":"131","severity":1,"message":"142","line":6,"column":10,"nodeType":"133","messageId":"134","endLine":6,"endColumn":20},{"ruleId":"131","severity":1,"message":"152","line":10,"column":10,"nodeType":"133","messageId":"134","endLine":10,"endColumn":24},{"ruleId":"131","severity":1,"message":"153","line":11,"column":10,"nodeType":"133","messageId":"134","endLine":11,"endColumn":25},{"ruleId":"131","severity":1,"message":"154","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":32},{"ruleId":"131","severity":1,"message":"155","line":2,"column":34,"nodeType":"133","messageId":"134","endLine":2,"endColumn":52},{"ruleId":"131","severity":1,"message":"154","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":32},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'ContactModelType' is defined but never used.","'isFilled' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'GetContact' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEditContact'. Either include it or remove the dependency array.","ArrayExpression",["158"],"'SearchBar' is defined but never used.","'isToggleMenu' is assigned a value but never used.","'toggleMenu' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'GetEditContact' is defined but never used.","'PostEditContact' is defined but never used.","'ContactDetailModelType' is defined but never used.","'PostPhotoModelType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},"Update the dependencies array to be: [getEditContact, id]",{"range":"161","text":"162"},[1042,1046],"[getEditContact, id]"]