{"ast":null,"code":"import _objectSpread from\"/Users/adrian/Documents/GitHub/contact/crudcontact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{Suspense}from'react';import{Redirect,Route}from'react-router-dom';// import authCheck from '../helpers/authCheck';\nimport{jsx as _jsx}from\"react/jsx-runtime\";var RouteWithSubRoutes=function RouteWithSubRoutes(route){/** Authenticated flag */ // const authenticated: boolean = authCheck();\nreturn/*#__PURE__*/_jsx(Suspense,{fallback:route.fallback,children:/*#__PURE__*/_jsx(Route,{path:route.path,render:function render(props){return route.redirect?/*#__PURE__*/_jsx(Redirect,{to:route.redirect}):route.component&&/*#__PURE__*/_jsx(route.component,_objectSpread(_objectSpread({},props),{},{routes:route.routes}));}})});};export default RouteWithSubRoutes;","map":{"version":3,"sources":["/Users/adrian/Documents/GitHub/contact/crudcontact/src/router/RouteWithSubRoutes.tsx"],"names":["React","Suspense","Redirect","Route","RouteWithSubRoutes","route","fallback","path","props","redirect","component","routes"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,QAAT,CAAmBC,KAAnB,KAAgC,kBAAhC,CACA;2CAGA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAmB,CAC5C,yBAD4C,CAE5C;AAEA,mBACE,KAAC,QAAD,EAAU,QAAQ,CAAEA,KAAK,CAACC,QAA1B,uBACE,KAAC,KAAD,EACE,IAAI,CAAED,KAAK,CAACE,IADd,CAEE,MAAM,CAAE,gBAACC,KAAD,QACNH,CAAAA,KAAK,CAACI,QAAN,cACE,KAAC,QAAD,EAAU,EAAE,CAAEJ,KAAK,CAACI,QAApB,EADF,CAGEJ,KAAK,CAACK,SAAN,eACE,KAAC,KAAD,CAAO,SAAP,gCAAqBF,KAArB,MAA4B,MAAM,CAAEH,KAAK,CAACM,MAA1C,GALE,EAFV,EADF,EADF,CAgBD,CApBD,CAsBA,cAAeP,CAAAA,kBAAf","sourcesContent":["import React, { Suspense } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n// import authCheck from '../helpers/authCheck';\nimport { IRoute } from './config';\n\nconst RouteWithSubRoutes = (route: IRoute) => {\n  /** Authenticated flag */\n  // const authenticated: boolean = authCheck();\n\n  return (\n    <Suspense fallback={route.fallback}>\n      <Route\n        path={route.path}\n        render={(props) =>\n          route.redirect ? (\n            <Redirect to={route.redirect} />\n          ) : (\n            route.component && (\n              <route.component {...props} routes={route.routes} />\n            )\n          )\n        }\n      />\n    </Suspense>\n  );\n};\n\nexport default RouteWithSubRoutes;\n"]},"metadata":{},"sourceType":"module"}