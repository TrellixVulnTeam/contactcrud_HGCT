{"ast":null,"code":"import { lazy } from 'react';\nimport Fallback from '../pages/fallback/Fallback';\nexport const routes = [{\n  path: '/',\n  exact: true,\n  component: /*#__PURE__*/lazy(() => import('../pages/home/Home')),\n  fallback: Fallback\n}];","map":{"version":3,"sources":["/Users/adrian/Documents/GitHub/contact/crudcontact/src/router/config.tsx"],"names":["lazy","Fallback","routes","path","exact","component","fallback"],"mappings":"AAAA,SAAwBA,IAAxB,QAAoE,OAApE;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAmBA,OAAO,MAAMC,MAAgB,GAAG,CAC9B;AACEC,EAAAA,IAAI,EAAE,GADR;AAEEC,EAAAA,KAAK,EAAE,IAFT;AAGEC,EAAAA,SAAS,eAAEL,IAAI,CAAC,MAAM,OAAO,oBAAP,CAAP,CAHjB;AAIEM,EAAAA,QAAQ,EAAEL;AAJZ,CAD8B,CAAzB","sourcesContent":["import { ComponentType, lazy, LazyExoticComponent, ReactNode } from 'react';\nimport Fallback from '../pages/fallback/Fallback';\n\nexport interface IRoute {\n  // Path, like in basic prop\n  path: string;\n  // Exact, like in basic prop\n  exact: boolean;\n  // Preloader for lazy loading\n  fallback: NonNullable<ReactNode> | null;\n  // Lazy Loaded component\n  component?: LazyExoticComponent<ComponentType<any>>;\n  // Sub routes\n  routes?: IRoute[];\n  // Redirect path\n  redirect?: string;\n  // If router is private, this is going to be true\n  private?: boolean;\n}\n\nexport const routes: IRoute[] = [\n  {\n    path: '/',\n    exact: true,\n    component: lazy(() => import('../pages/home/Home')),\n    fallback: Fallback,\n  },\n];\n"]},"metadata":{},"sourceType":"module"}