{"ast":null,"code":"var _jsxFileName = \"/Users/adrian/Documents/GitHub/contact/crudcontact/src/pages/home/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Home.scss';\nimport { GetContact } from '../../api/GetContact';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [contactList, setContactList] = useState([]);\n  const [isToggleMenu, setIsToggleMenu] = useState(false);\n  useEffect(() => {\n    getContact();\n  }, []);\n\n  const getContact = () => {\n    GetContact().then(result => {\n      setContactList(result);\n      console.log(result, 'apani');\n    });\n  };\n\n  const toggleMenu = () => {\n    setIsToggleMenu(!isToggleMenu);\n  }; //Table Styling\n\n\n  const StyledTableCell = withStyles(theme => createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 14\n    }\n  }))(TableCell);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `menu-bar ${isToggleMenu ? 'show' : ''}`,\n      onClick: toggleMenu,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-item\",\n        children: \"a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-item\",\n        children: \"a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-item\",\n        children: \"a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-item\",\n        children: \"a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"Selamat datang\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-label\": \"customized table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Dessert (100g serving)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: \"Calories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: \"Fat\\xA0(g)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: \"Carbs\\xA0(g)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: \"Protein\\xA0(g)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.map(row => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: row.calories\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: row.fat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: row.carbs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: row.protein\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 29\n              }, this)]\n            }, row.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), contactList.map(res => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"6HUDv8nGsy5ENkRHp3jNKmS2g+E=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/adrian/Documents/GitHub/contact/crudcontact/src/pages/home/Home.tsx"],"names":["React","useEffect","useState","GetContact","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Home","contactList","setContactList","isToggleMenu","setIsToggleMenu","getContact","then","result","console","log","toggleMenu","StyledTableCell","withStyles","theme","createStyles","head","backgroundColor","palette","common","black","color","white","body","fontSize","classes","table","rows","map","row","name","calories","fat","carbs","protein","res"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './Home.scss'\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetContact } from '../../api/GetContact';\nimport { ContactDetailModelType, ContactModelType } from '../../models/ContactModel';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst Home = () => {\n    const [ contactList, setContactList ] = useState([] as ContactDetailModelType[])\n    const [ isToggleMenu, setIsToggleMenu ] = useState(false);\n\n    useEffect(()=>{\n        getContact()\n    },[])\n\n    const getContact = () => {\n        GetContact().then((result) => {\n            setContactList(result)\n            console.log(result, 'apani')\n        })\n    }\n\n    const toggleMenu = () => {\n        setIsToggleMenu(!isToggleMenu);\n    }\n\n\n    //Table Styling\n    const StyledTableCell = withStyles((theme: Theme) =>\n        createStyles({\n            head: {\n            backgroundColor: theme.palette.common.black,\n            color: theme.palette.common.white,\n            },\n            body: {\n            fontSize: 14,\n            },\n        }),\n    )(TableCell);\n    return (\n        <div className=\"contact-home\">\n            <div className={`menu-bar ${isToggleMenu ? 'show' : ''}`} onClick={toggleMenu}>\n                <div className=\"menu-item\">\n                    a\n                </div>\n                <div className=\"menu-item\">\n                    a\n                </div>\n                <div className=\"menu-item\">\n                    a\n                </div>\n                <div className=\"menu-item\">\n                    a\n                </div>\n            </div>\n            <div className=\"contact-main\">\n                <div className=\"header\">\n                    Selamat datang\n                </div>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"customized table\">\n                        <TableHead>\n                        <TableRow>\n                            <StyledTableCell>Dessert (100g serving)</StyledTableCell>\n                            <StyledTableCell align=\"right\">Calories</StyledTableCell>\n                            <StyledTableCell align=\"right\">Fat&nbsp;(g)</StyledTableCell>\n                            <StyledTableCell align=\"right\">Carbs&nbsp;(g)</StyledTableCell>\n                            <StyledTableCell align=\"right\">Protein&nbsp;(g)</StyledTableCell>\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {rows.map((row) => (\n                            <StyledTableRow key={row.name}>\n                            <StyledTableCell component=\"th\" scope=\"row\">\n                                {row.name}\n                            </StyledTableCell>\n                            <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\n                            <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\n                            <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\n                            <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\n                            </StyledTableRow>\n                        ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n\n            {\n                contactList.map((res) => {\n                    return (\n                        <div className=\"contact-list\">\n                            {/* {res.age} */}\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}